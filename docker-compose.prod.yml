version: '3.8'

services:
  postgres:
    image: timescale/timescaledb:latest-pg15
    container_name: weave-postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-weave}
      POSTGRES_USER: ${POSTGRES_USER:-weave_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST_AUTH_METHOD: md5
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-weave_user} -d ${POSTGRES_DB:-weave}"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - weave-network

  redis:
    image: redis:7-alpine
    container_name: weave-redis
    volumes:
      - redis_data:/data
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    healthcheck:
      test: ["CMD", "redis-cli", "auth", "${REDIS_PASSWORD}", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - weave-network

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: weave-rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER:-weave_user}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
      RABBITMQ_DEFAULT_VHOST: ${RABBITMQ_VHOST:-weave_vhost}
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - weave-network

  weave-be:
    build:
      context: ./weave-be
      dockerfile: Dockerfile
    container_name: weave-backend
    environment:
      - ENV=production
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=${POSTGRES_DB:-weave}
      - DB_USER=${POSTGRES_USER:-weave_user}
      - DB_PASSWORD=${POSTGRES_PASSWORD}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_USER=${RABBITMQ_USER:-weave_user}
      - RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD}
      - RABBITMQ_VHOST=${RABBITMQ_VHOST:-weave_vhost}
      - JWT_SECRET=${JWT_SECRET}
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - weave-network

  weave-scheduler:
    build:
      context: ./weave-scheduler
      dockerfile: Dockerfile
    container_name: weave-scheduler
    environment:
      - ENV=production
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=${POSTGRES_DB:-weave}
      - DB_USER=${POSTGRES_USER:-weave_user}
      - DB_PASSWORD=${POSTGRES_PASSWORD}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_USER=${RABBITMQ_USER:-weave_user}
      - RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD}
      - RABBITMQ_VHOST=${RABBITMQ_VHOST:-weave_vhost}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - weave-network

  weave-worker:
    build:
      context: ./weave-worker
      dockerfile: Dockerfile
    container_name: weave-worker
    environment:
      - ENV=production
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=${POSTGRES_DB:-weave}
      - DB_USER=${POSTGRES_USER:-weave_user}
      - DB_PASSWORD=${POSTGRES_PASSWORD}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_USER=${RABBITMQ_USER:-weave_user}
      - RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD}
      - RABBITMQ_VHOST=${RABBITMQ_VHOST:-weave_vhost}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    restart: unless-stopped
    deploy:
      replicas: 2
    networks:
      - weave-network

  weave-fe:
    build:
      context: ./weave-fe
      dockerfile: Dockerfile
    container_name: weave-frontend
    environment:
      - REACT_APP_API_BASE_URL=http://weave-be:8080
    ports:
      - "3000:80"
    depends_on:
      - weave-be
    restart: unless-stopped
    networks:
      - weave-network

  nginx:
    image: nginx:alpine
    container_name: weave-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - weave-fe
      - weave-be
    restart: unless-stopped
    networks:
      - weave-network

volumes:
  postgres_data:
  redis_data:
  rabbitmq_data:

networks:
  weave-network:
    driver: bridge